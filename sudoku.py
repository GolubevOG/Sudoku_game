import pgzrun # импорт сторонних библиотек
import random


WIDTH= 700  #размеры всего окна 
HEIGHT= 900


sudokupole = Actor("sudokupole", center = (WIDTH/2,600/2+50)) # поле судоку как класс актер
youwin2 = Actor("youwin2", center = (-10000,-10000))# актер с изображением которое вылезает при победе
chisla = [0]*9 #создаем массив чисел и клеток
kletki = [0]*9
notsee = open('sudokunotsee.txt')#числа судоку для победы
notsee = notsee.read()
see = open('sudokusee.txt')#числа которые показываются в начале
see = see.read()
i1 = 0
j1 = 0
a = 0

for i in range(0,9):#в этом цикле присваиваем массивам актеров с помощью которых будем прорисовывать изначальное поле и числа для выбора в панели под полем
    chisla[i] =[0,0]#делаем из массива чисел двумерный
    chisla[i][1] = Actor("mychislo" + str(i+1), center = (50 + 32 + i*3 + i*64, 775))#присваиваем второму элементу из пары в массив чисел актера с картинкой числа с энным номером и его координаты зависящие от перемнной
    chisla[i][0] = Actor("white", center = (50 + 32 + i*64 + i*3, 775))#присваиваем первому элементу для бэкграундов из пары в массиве чисел белый квадрат и его координаты зависящие от перемнной
    kletki[i] = [[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]]#из клеток многомерный массив
    for j in range(0,9):#еще один цикл так как в клетках нужно больше переменных
        kletki[i][j][0] = Actor("white", center = (50 + 3 + j + 32 + j*64 + j//3*3, 50 + 3 + i + 32 + i*64 + i//3*3))#присваиваем первому элементу для бэкграундов из тройки в массиве клеток белый квадрат  и его координаты зависящие от перемнной
        if see[i*9+j]=="0":#если в ряде чисел которые прорисовываем в начале встречается 0 то присваиваем второму элементу воместо нуля в массиве актера с белым квадратом но с другим названием для проверки в программе ниже и его координаты зависящие от перемнной
            kletki[i][j][1] = Actor("false0", center = (50 + 3 + j + 32 + j*64 + j//3*3, 50 + 3 + i + 32 + i*64 + i//3*3))
        else:#иначе присваеваем актера с картинкой нужного числа и его координаты зависящие от перемнной
            kletki[i][j][1] = Actor("mychislo" + see[i*9+j], center = (50 + 3 + j + 32 + j*64 + j//3*3, 50 + 3 + i + 32 + i*64 + i//3*3))
            kletki[i][j][2] = 1#а в третий элемент пишем единичку для отличия от просто белого квадрата без чисел 
kletki[0][0][0].image = "blue"#"ставим курсор" на первую клеточку в таблице
def stechkin(i1,j1,n): # функция "подсветки"
    global kletki#хотим использовать клетки и в этой функции
    for x in range(0,9): #пара циклов для переменных для массивов
        for y in range(0,9):
            if (x!=i1 or y!=j1) and kletki[x][y][0].image != "red": #выбираем клетки из всех которые не красные и находятся в одной строке и столбце с выбранной клеткой
                if kletki[x][y][1].image[-1] == kletki[i1][j1][1].image[-1] != "0":#если находим по последним номерам названий изображений совпадающие числа то подсвечиваем их бэкграунд нужным цветом
                    kletki[x][y][0].image = n
                if x == i1: #если в одной строке подсвечиваем
                    kletki[x][y][0].image = n
                if y == j1: #если в одном столбце подсвечиваем
                    kletki[x][y][0].image = n
                if i1//3*3 <= x < (i1//3 + 1)*3 and j1//3*3 <= y < (j1//3 + 1)*3 :#в одном квадрате три на три подсвечиваем тоже
                    kletki[x][y][0].image = n
def on_mouse_down(pos):#функция для нажатий
    global i1, j1, b
    b = 0
    if kletki[i1][j1][2] == 0:""#если клетка не с изначально поставленным числом то выполняем цикл
        for i in range(0,9):#цикл для выбора под полем
            if chisla[i][1].collidepoint(pos):#если на одно из чисел под полем кликнули то выполняем цикл
                stechkin(i1,j1,"white")#вызываем функцию стечкин для покраски клеток предыдущего выбранного числа в белый 
                if chisla[i][1].image != "mychislo" + notsee[i1*9+j1]:#если выбранное число не совпадает с тем которое должно быть в правильном ответе то подсвечиваем место кудо его поставили красным
                    kletki[i1][j1][0].image = "red"
                else:# иначе синим если правилььное
                    kletki[i1][j1][0].image = "blue"
                kletki[i1][j1][1].image = "chislo" + str(i+1)# затем ставим выбранное число на выбранное место но число синее
                stechkin(i1,j1,"grey")#подсвечиваем бэкграун серым
                break
    for i in range(0,9):#циклы для выбора места в поле
        for j in range(0,9):
            if kletki[i][j][1].image[-1] == notsee[i*9 + j] != 0: #если клетка соответствует той которая должна стоять в ответе и не нулевая то счетчик увеличиваем пробегаем по всем
                b += 1
            if kletki[i][j][0].collidepoint(pos): #если на одну клетку на поле кликнули то выполняем цикл
                stechkin(i1,j1,"white") # перекрашиваем подсвеченые клетки предыдущей выбранной клетки в белый
                if kletki[i][j][0].image != "red": # если бэкграунд изображение новой клетки не красное то меняем на синее
                    kletki[i][j][0].image = "blue"
                if kletki[i1][j1][0].image == "blue" and (i1 != i or j1 != j):# если бэкграунд изображение предыдущей выбранной клетки синее и если стоит не в одном месте с текущей клеткой то меняем бэкграунд на белый
                    kletki[i1][j1][0].image = "white"
                i1 = i #присваиваем координаты текущей выбранной клетки в глобальные переменные
                j1 = j
                stechkin(i1,j1,"grey")#делаем подсветку серым для текущей клетки
    if b == 81 :#если по счетчику видно что все судку завершили меняем координаты надписи с победой
        youwin2.x = WIDTH/2
        youwin2.y = 700/2
    
def draw():#запускаем шарманку
    screen.clear()#стандартные команды
    screen.fill((0,0,0))
    ##sudokupole.draw()
    if youwin2.x < 0:#если после проверки надписи не поменяли координаты то прорисовываем поле числа и бэкграунды
        for i in range(0,9):
            chisla[i][0].draw()
            chisla[i][1].draw()
            for j in range(0,9):
                kletki[i][j][0].draw()
                kletki[i][j][1].draw()
    youwin2.draw()# иначе пишем про победу
pgzrun.go()#запускаем шарманку2.0
